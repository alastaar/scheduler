enum Permission {
  ADMIN
  USER
  TATTOOARTIST
  PERMISSIONUPDATE
}

enum EmailPreference {
  REQUESTCREATED
  REQUESTAPPROVED
  REQUESTCONFIRMED
  REQUESTREJECTED
  REQUESTDELETED
  APPOINTMENTTOMORROW
  UPDATEDSTRIPEACCOUNT
  UPDATEDCARD
}

type User {
  id: ID! @unique
  accId: String @unique
  name: String!
  lastName: String!
  email: String! @unique
  password: String!
  instagramHandle: String @unique
  shop: String
  price: Int @default(value: "0")
  bio: String
  profileImage: String
  image: String
  resetToken: String
  resetTokenExpiry: String
  artist: String
  timeDetails: String
  country: String
  type: String
  addressCity: String
  addressLineOne: String
  addressPostalCode: String
  addressState: String
  dobDay: String
  dobMonth: String
  dobYear: String
  ssnLastFour: String
  stripeToken: String
  bankToken: String
  blackOut: [String]
  blackOutRanges: [BlackOutDates] @relation(name: "BlackoutDayByUser")
  permissions: [Permission]
  emailPreference: [EmailPreference]
  chats: [Chat]
  cart: [CartItem!]! @relation(name: "CartByUser" onDelete: CASCADE)
  createdAt: DateTime
  updatedAt: DateTime
}

type Item {
  id: ID! @unique
  title: String!
  description: String!
  image: String
  largeImage: String
  price: Int!
  user: User
}

type Request {
  id: ID! @unique
  requestedId: String!
  name: String!
  lastName: String!
  email: String!
  price: Int!
  details: String
  referenceImage: String!
  dateOne: String!
  timeOne: String!
  dateTwo: String
  timeTwo: String
  dateThree: String
  timeThree: String
  approved: String
  rejectReason: String
  user: User
}

type CartItem {
  id: ID! @unique
  quantity: Int! @default(value: 1)
  request: Request
  user: User @relation(name: "CartByUser")
}

type OrderRequest {
  id: ID! @unique
  name: String!
  lastName: String!
  requestedId: String!
  email: String!
  price: Int!
  details: String!
  referenceImage: String!
  quantity: Int! @default(value: "1")
  approved: String
  user: User
}

type Order {
  id: ID! @unique
  requests: [OrderRequest!]!
  total: Int!
  user: User
  charge: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type BlackOutDates {
  id: ID! @unique
  begin: String
  end: String
  weekday: String
  user: User @relation(name: "BlackoutDayByUser")
}

type Chat {
  id: ID! @unique
  vendor: String!
  client: String!
  clientMessages: [ChatMessage]
}

type ChatMessage {
  id: ID! @unique
  chatId: String
  message: String
  createdAt: DateTime!
  user: User
}
