{"version":3,"file":"static/webpack/static/development/pages/settings.js.6bffff8e0cc2ec05764e.hot-update.js","sources":["webpack:///./components/DeleteUser.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { ALL_USERS_QUERY } from './Permissions';\n\nconst DELETE_USER_MUTATION = gql`\n  mutation DELETE_USER_MUTATION($id: ID!) {\n    deleteItem(id: $id) {\n      id\n    }\n  }\n`;\n\nclass DeleteUser extends Component {\n  update = (cache, payload) => {\n    // manually update the cache on the client, so it matches the server\n    // 1. Read the cache for the items we want\n    const data = cache.readQuery({ query: ALL_USERS_QUERY });\n    console.log(data, payload);\n    // 2. Filter the deleted itemout of the page\n    data.users = data.users.filter(user => user.id !== payload.data.deleteUser.id);\n    // 3. Put the items back!\n    cache.writeQuery({ query: ALL_USERS_QUERY, data });\n  };\n  render() {\n    return (\n      <Mutation\n        mutation={DELETE_USER_MUTATION}\n        variables={{ id: this.props.id }}\n        update={this.update}\n        refetchQueries={[{ query: ALL_USERS_QUERY }]}\n      >\n        {(deleteUser, { error }) => (\n          <button\n            onClick={() => {\n              if (confirm('Are you sure you want to delete this user?')) {\n                deleteUser().catch(err => {\n                  alert(err.message);\n                });\n              }\n            }}\n          >\n            {this.props.children}\n          </button>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default DeleteUser;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAOA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAeA;;;;AAlCA;AACA;AAoCA;;;;A","sourceRoot":""}