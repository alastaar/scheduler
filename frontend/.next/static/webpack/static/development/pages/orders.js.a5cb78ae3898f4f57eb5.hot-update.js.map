{"version":3,"file":"static/webpack/static/development/pages/orders.js.a5cb78ae3898f4f57eb5.hot-update.js","sources":["webpack:///./components/Items.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Item from './Item';\nimport Pagination from './Pagination';\nimport { perPage } from '../config';\nimport { ALL_USERS_QUERY } from './Permissions';\nimport UserBlock from './UserBlock';\n\nconst ItemsList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 60px;\n  max-width = ${ props => props.theme.maxWidth }\n  margin: 0 auto;\n`;\n\nconst Center = styled.div`\n  text-align: center;\n`;\n\nclass Items extends Component {\n  render() {\n    return (\n      <Center>\n        <Pagination page={ this.props.page } />\n        <Query query={ ALL_USERS_QUERY } variables={{\n          skip: this.props.page * perPage - perPage,\n        }}>\n          { ({ data, error, loading }) => {\n            if ( loading ) return <p> ... loading </p>;\n            if ( error ) return <p> ERROR: { error.message }</p>;\n            return <ItemsList>\n              { data.users.map(user => <UserBlock user={user} key={ user.id }/>) }\n            </ItemsList>;\n          } }\n        </Query>\n        <Pagination page={ this.props.page } />\n      </Center>\n    )\n  }\n}\n\nexport default Items;\nexport { ALL_ITEMS_QUERY };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAnBA;AACA;AAqBA;;;;;A","sourceRoot":""}