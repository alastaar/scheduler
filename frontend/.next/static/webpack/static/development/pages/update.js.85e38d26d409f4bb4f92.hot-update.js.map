{"version":3,"file":"static/webpack/static/development/pages/update.js.85e38d26d409f4bb4f92.hot-update.js","sources":["webpack:///./components/UserDetailsUpdate.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Link from 'next/link';\nimport User from './User';\nimport { Query, Mutation } from 'react-apollo';\nimport Error from './ErrorMessage';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport Table from './styles/Table';\nimport SickButton from './styles/SickButton';\nimport PropTypes from 'prop-types';\nimport { CURRENT_USER_QUERY } from './User';\nimport Router from 'next/router';\nimport formatMoney from '../lib/formatMoney';\n\nconst UPDATE_USER_MUTATION = gql`\n  mutation updateUserInfo($name: String, $lastName: String, $email: String, $instagramHandle: String, $shop: String, $profileImage: String, $image: String, $price: Int, $bio: String, $userId: ID!) {\n    updateUserInfo(name: $name, lastName: $lastName, email: $email, instagramHandle: $instagramHandle, shop: $shop, profileImage: $profileImage, image: $image, price: $price, bio: $bio, userId: $userId) {\n      id\n      name\n      lastName\n      email\n      instagramHandle\n      shop\n      profileImage\n      image\n      price\n      bio\n    }\n  }\n`;\n\nclass UserDetailsUpdate extends Component  {\n  state = {\n  };\n  handleUserChange = e => {\n    const { name, type, value } = e.target;\n    const val = type === 'number' ? (parseFloat(value) * 100) : value;\n    this.setState({ [name]: val });\n    this.setState({ name: nameVal.value, lastName: lastName.value, email: email.value });\n  };\n\n  divideByHundred = value => {\n    const newVal = value/100;\n    return newVal;\n  }\n\n  updateUserInfo = async (e, updateUserInfoMutation) => {\n    e.preventDefault();\n    console.log(this.state);\n    const res = await updateUserInfoMutation({\n      variables: {\n        ...this.state,\n      },\n    });\n    console.log(\"updated\");\n  };\n\n  uploadFile = async e => {\n    console.log('uploading file ..... ');\n    const files = e.target.files;\n    const data = new FormData();\n    data.append('file', files[0]);\n    data.append('upload_preset', 'sickfits');\n\n    const res = await fetch('https://api.cloudinary.com/v1_1/a1995/image/upload', {\n      method: 'POST',\n      body: data\n    });\n    const file = await res.json();\n    console.log(file);\n    this.setState({\n      profileImage: file.secure_url,\n      image: file.eager[0].secure_url\n    });\n  }\n\n  render() {\n    return (\n      <>\n      <User>\n        {({ data: { me } }) => (\n          <>\n            <h2>Account Details</h2>\n              <Mutation\n                mutation={UPDATE_USER_MUTATION}\n                variables={{\n                  ...this.state,\n                  userId: this.props.id,\n                }}\n                refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n              >\n                {(updateUserInfo, { loading, error }) => (\n                  <Form onSubmit={e => {\n                    this.updateUserInfo(e, updateUserInfo);\n                    Router.push({\n                      pathname: '/me',\n                    });\n                  }}>\n                    <Error error={error} />\n                    <fieldset disabled={loading} aria-busy={loading}>\n                      <label htmlFor=\"name\">\n                        First Name\n                        <input\n                          type=\"text\"\n                          id=\"nameVal\"\n                          name=\"nameVal\"\n                          placeholder=\"name\"\n                          required\n                          defaultValue={me.name}\n                          onChange={this.handleUserChange}\n                        />\n                      </label>\n                      <label htmlFor=\"lastName\">\n                        Last Name\n                        <input\n                          type=\"text\"\n                          id=\"lastName\"\n                          name=\"lastName\"\n                          placeholder=\"lastName\"\n                          required\n                          defaultValue={me.lastName}\n                          onChange={this.handleUserChange}\n                        />\n                      </label>\n\n                      <label htmlFor=\"email\">\n                        Email\n                        <input\n                          type=\"text\"\n                          id=\"email\"\n                          name=\"email\"\n                          placeholder=\"email\"\n                          required\n                          defaultValue={me.email}\n                          onChange={this.handleUserChange}\n                        />\n                      </label>\n                      <label htmlFor=\"price\">\n                        Price for appointment\n                        <input\n                          type=\"number\"\n                          min=\"0\"\n                          step=\"1\"\n                          data-number-to-fixed=\"2\"\n                          data-number-stepfactor=\"100\"\n                          id=\"price\"\n                          name=\"price\"\n                          placeholder=\"price\"\n                          required\n                          defaultValue={ this.divideByHundred(me.price) }\n                          onChange={this.handleUserChange}\n                        />\n                      </label>\n                      <label htmlFor=\"bio\">\n                        Bio\n                        <textarea\n                          id=\"bio\"\n                          name=\"bio\"\n                          placeholder=\"Enter a bio\"\n                          required\n                          defaultValue={me.bio}\n                          onChange={this.handleUserChange}\n                        />\n                      </label>\n\n                      <label htmlFor=\"instagramHandle\">\n                        Instagram Handle\n                        <input\n                          type=\"text\"\n                          id=\"instagramHandle\"\n                          name=\"instagramHandle\"\n                          placeholder=\"Instagram Handle\"\n                          required\n                          defaultValue={me.instagramHandle}\n                          onChange={this.handleUserChange}\n                        />\n                      </label>\n\n                      <label htmlFor=\"shop\">\n                        Shop\n                        <input\n                        type=\"text\"\n                          id=\"shop\"\n                          name=\"shop\"\n                          placeholder=\"Shop\"\n                          required\n                          defaultValue={me.shop}\n                          onChange={this.handleUserChange}\n                        />\n                      </label>\n\n                      <label htmlFor=\"profileImage\">\n                        Profile Image\n                        <input\n                          type=\"file\"\n                          id=\"profileImage\"\n                          name=\"profileImage\"\n                          placeholder=\"Upload a Profile image\"\n                          onChange={ this.uploadFile }\n                        />\n                        { this.state.image && <img src={ this.state.image } alt=\"upload preview\" /> }\n                        <button type=\"submit\">Sav{loading ? 'ing' : 'e'} Changes</button>\n                      </label>\n                    </fieldset>\n                  </Form>\n                )}\n              </Mutation>\n            { me && (\n              <>\n\n              </>\n            )}\n            { !me && (\n              <>\n                <h2>Sorry this is not your account please move along </h2>\n              </>\n            )}\n          </>\n        )}\n      </User>\n      </>\n    );\n  }\n}\n\n\nexport default UserDetailsUpdate;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAgBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAIA;AADA;AACA;AAJA;AAGA;AAKA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAQA;AACA;AAFA;AACA;AARA;AAOA;AAPA;AAAA;AACA;AADA;AAWA;AACA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAkcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA9GA;AA2HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtIA;AA8IA;;;;AA/LA;AACA;AAkMA;;;;A","sourceRoot":""}