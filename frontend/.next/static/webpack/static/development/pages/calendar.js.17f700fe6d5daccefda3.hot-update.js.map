{"version":3,"file":"static/webpack/static/development/pages/calendar.js.17f700fe6d5daccefda3.hot-update.js","sources":["webpack:///./components/CalendarComponent.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport gql from 'graphql-tag';\nimport moment from \"moment\";\nimport { Query } from 'react-apollo';\nimport User from './User';\nimport styled from 'styled-components';\nimport Link from 'next/link';\n\nconst SINGLE_REQUESTS_CALENDAR_QUERY = gql`\n  query SINGLE_REQUESTS_CALENDAR_QUERY($id: ID!) {\n    request(id: $id) {\n      id\n      name\n      email\n      details\n      dateOne\n      timeOne\n      approved\n      user{\n        name\n        lastName\n        email\n      }\n    }\n  }\n`;\n\nconst CalendarComponentStyles = styled.div`\n  height: 20px;\n  padding-left: 5px;\n  padding-right: 5px;\n  padding-top: 2px;\n  padding-bottom: 2px;\n`;\n\nconst CalendarStyled = styled.div`\n  a {\n    font-size: 10px;\n    margin: 0;\n    color: white;\n    vertical-align: top;\n\n  }\n`;\n\n\n\n// class CalendarComponent extends Component {\n//   state = {\n//     view: \"day\",\n//     date: new Date(),\n//     width: 500,\n//     cal_events: [],\n//   };\n//\n//   convertDate = (date) => {\n//     return moment.utc(date).toDate()\n//   }\n//\n//   convertTime = (time24) => {\n//     var tmpArr = time24.split(':'), time12;\n//     if(+tmpArr[0] == 12) {\n//       time12 = tmpArr[0] + ':' + tmpArr[1] + ' pm';\n//     }\n//     else {\n//       if(+tmpArr[0] == 0) {\n//         time12 = '12:' + tmpArr[1] + ' am';\n//       }\n//       else {\n//         if(+tmpArr[0] > 12) {\n//           time12 = (+tmpArr[0]-12) + ':' + tmpArr[1] + ' pm';\n//         }\n//         else {\n//           time12 = (+tmpArr[0]) + ':' + tmpArr[1] + ' am';\n//         }\n//       }\n//     }\n//     return time12;\n//   }\n//\n//\n//   render() {\n//     return (\n//       <User>\n//         {({ data: { me } }) => (\n//           <>\n//           <CalendarStyled>\n//             <Query query={SINGLE_REQUESTS_CALENDAR_QUERY} variables={{ id: this.props.id }}>\n//               { ({ data, error, loading }) => {\n//                 if ( loading ) return <p> ... loading </p>;\n//                 if ( error ) return <p> ERROR: { error.message }</p>;\n//                 const request = data.request;\n//                 console.log(request);\n//                 return  <>\n//                   {request.email === me.email && (\n//                       <Link href={{pathname: '/request-item', query: { id: request.id },}}>\n//                         <a>\n//                           <CalendarComponentStyles style={{background: request.approved === \"no\" ? \"red\" : request.approved === \"yes\" ? \"black\" : \"gold\"}}>\n//                             <div>\n//                               { this.convertTime(request.timeOne) } with { request.name }\n//                             </div>\n//                           </CalendarComponentStyles>\n//                         </a>\n//                       </Link>\n//\n//                     )}\n//                   </>\n//               }}\n//             </Query>\n//           </CalendarStyled>\n//         </>\n//       )}\n//     </User>\n//     );\n//   }\n// }\n\nconst Permissions = props => (\n  <Query query={ALL_USERS_QUERY}>\n    {({ data, loading, error }) => (\n      <div>\n        <Error error={error} />\n        <div>\n          <h2>Manage Permissions</h2>\n          <Table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Email</th>\n                {possiblePermissions.map(permission => <th key={permission}>{permission}</th>)}\n                <th>üëáüèª</th>\n              </tr>\n            </thead>\n            <tbody>{data.users.map(user => <UserPermissions user={user} key={user.id} />)}</tbody>\n          </Table>\n        </div>\n      </div>\n    )}\n  </Query>\n);\n\nclass UserPermissions extends React.Component {\n    state = {\n      view: \"day\",\n      date: new Date(),\n      width: 500,\n      cal_events: [],\n    };\n\n    convertDate = (date) => {\n      return moment.utc(date).toDate()\n    }\n\n    convertTime = (time24) => {\n      var tmpArr = time24.split(':'), time12;\n      if(+tmpArr[0] == 12) {\n        time12 = tmpArr[0] + ':' + tmpArr[1] + ' pm';\n      }\n      else {\n        if(+tmpArr[0] == 0) {\n          time12 = '12:' + tmpArr[1] + ' am';\n        }\n        else {\n          if(+tmpArr[0] > 12) {\n            time12 = (+tmpArr[0]-12) + ':' + tmpArr[1] + ' pm';\n          }\n          else {\n            time12 = (+tmpArr[0]) + ':' + tmpArr[1] + ' am';\n          }\n        }\n      }\n      return time12;\n    }\n  render() {\n    const request = this.props.request;\n    return (\n      <Mutation\n        mutation={UPDATE_PERMISSIONS_MUTATION}\n        variables={{\n          permissions: this.state.permissions,\n          userId: this.props.user.id,\n        }}\n      >\n        {(updatePermissions, { loading, error }) => (\n          <>\n            {error && <tr><td colspan=\"8\"><Error error={error} /></td></tr>}\n            < tr >\n              <td>{user.name} { user.lastName }</td>\n              <td>{user.email}</td>\n              {possiblePermissions.map(permission => (\n                <td key={permission}>\n                  <label htmlFor={`${user.id}-permission-${permission}`}>\n                    <input\n                      id={`${user.id}-permission-${permission}`}\n                      type=\"checkbox\"\n                      checked={this.state.permissions.includes(permission)}\n                      value={permission}\n                      onChange={this.handlePermissionChange}\n                    />\n                  </label>\n                </td>\n              ))}\n              <td>\n                <SickButton type=\"button\" disabled={loading} onClick={updatePermissions}>\n                  Updat{loading ? 'ing' : 'e'}\n                </SickButton>\n              </td>\n            </tr>\n          </>\n        )}\n      </Mutation>\n    );\n  }\n}\n\n\nexport default CalendarComponent;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAmBA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAadA;AAFA;AACA;AAuBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AApBA;AA6BA;;;;AAvEA;AACA;AA0EA;;;;A","sourceRoot":""}