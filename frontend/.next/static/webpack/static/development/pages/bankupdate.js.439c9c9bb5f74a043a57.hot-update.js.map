{"version":3,"file":"static/webpack/static/development/pages/bankupdate.js.439c9c9bb5f74a043a57.hot-update.js","sources":["webpack:///./components/UpdateBankInfo.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Link from 'next/link';\nimport User from './User';\nimport { Query, Mutation } from 'react-apollo';\nimport Error from './ErrorMessage';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Form from './styles/Form';\nimport Table from './styles/Table';\nimport SickButton from './styles/SickButton';\nimport PropTypes from 'prop-types';\nimport { CURRENT_USER_QUERY } from './User';\nimport Router from 'next/router';\n\n\n\nconst BANK_UPDATE_MUTATION = gql`\n  mutation updateBankInfo($bankToken: String!) {\n    updateBankInfo(bankToken: $bankToken) {\n      id\n      accId\n    }\n  }\n`;\n\nconst StripedElement = styled.div`\n.StripeElement {\n  background-color: white;\n  height: 40px;\n  padding: 10px 12px;\n  border-radius: 4px;\n  border: 1px solid transparent;\n  box-shadow: 0 1px 3px 0 #e6ebf1;\n  -webkit-transition: box-shadow 150ms ease;\n  transition: box-shadow 150ms ease;\n}\n\n.StripeElement--focus {\n  box-shadow: 0 1px 3px 0 #cfd7df;\n}\n\n.StripeElement--invalid {\n  border-color: #fa755a;\n}\n\n.StripeElement--webkit-autofill {\n  background-color: #fefde5 !important;\n}\n`;\n\n\n\nclass UpdateBankInfo extends Component {\n\n  componentDidMount(){\n    this.stripe = Stripe('pk_test_K3j8JU1o7WrtlpA5zY8bavrR');\n\n    // Create an instance of Elements.\n    this.elements = this.stripe.elements();\n\n    // Custom styling can be passed to options when creating an Element.\n    // (Note that this demo uses a wider set of styles than the guide below.)\n     this.style = {\n      base: {\n        color: '#32325d',\n        lineHeight: '18px',\n        fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n        fontSmoothing: 'antialiased',\n        fontSize: '16px',\n        '::placeholder': {\n          color: '#aab7c4'\n        }\n      },\n      invalid: {\n        color: '#fa755a',\n        iconColor: '#fa755a'\n      }\n    };\n\n    // Create an instance of the card Element.\n     this.card = this.elements.create('card', {style: this.style});\n\n    // Add an instance of the card Element into the `card-element` <div>.\n      // Custom styling can be passed to options when creating an Element.\n    this.card.mount('#card-element');\n  }\n\n  // Create a Stripe client\n  state = {\n    currency: 'usd',\n    token: '',\n  };\n\n  handleUserChange = e => {\n    const { name, type, value } = e.target;\n    const val = type === 'number' ? parseFloat(value) : value;\n    this.setState({ [name]: val });\n    this.setState({ name: nameVal.value, lastName: lastName.value, type: 'individual' });\n  };\n\n  updateBankInfo = async (e, updateStripeAccountMutation) => {\n    e.preventDefault();\n    const {token, error} = await this.stripe.createToken(this.card, {\n      currency: 'usd',\n    });\n\n    console.log(token);\n\n    if (error) {\n      // Inform the customer that there was an error.\n      const errorElement = document.getElementById('card-errors');\n      errorElement.textContent = error.message;\n    }\n\n    this.state.token= token.id;\n\n    const res = await updateStripeAccountMutation({\n      variables: {\n        bankToken: token.id,\n      },\n    });\n    console.log(\"going to the backend\");\n  };\n\n\n  render() {\n    return (\n      <>\n      <User>\n        {({ data: { me } }) => (\n          <>\n            <h2>Card Details</h2>\n              <Mutation\n                mutation={ BANK_UPDATE_MUTATION }\n                variables={{\n                  bankToken: this.state.token\n                }}\n              >\n                {(updateBankInfo, { loading, error }) => (\n                  <Form className=\"accountUpdate\" onSubmit={ async e => {\n                    console.log(this.state);\n                    await this.updateBankInfo(e, updateBankInfo);\n                  }}>\n                    <Error error={error} />\n                    <fieldset disabled={loading} aria-busy={loading}>\n                      <StripedElement>\n                        <div className=\"form-row\">\n                            <label htmlFor=\"card-element\">\n                            </label>\n                            <legend>Billing Address</legend>\n                            <label>\n                              <span>Street Address Line 1</span>\n                              <input\n                                type=\"text\"\n                                id=\"addressLineOne\"\n                                name=\"addressLineOne\"\n                                placeholder=\"addressLineOne\"\n                                required\n                                defaultValue={me.addressLineOne}\n                                onChange={this.handleUserChange}\n                              />\n                            </label>\n                            <label>\n                              <span>City</span>\n                              <input\n                                type=\"text\"\n                                id=\"addressCity\"\n                                name=\"addressCity\"\n                                placeholder=\"addressCity\"\n                                required\n                                defaultValue={me.addressCity}\n                                onChange={this.handleUserChange}\n                              />\n                            </label>\n                            <label>\n                              <span>State</span>\n                              <input\n                                type=\"text\"\n                                id=\"addressState\"\n                                name=\"addressState\"\n                                placeholder=\"addressState\"\n                                required\n                                defaultValue={me.addressState}\n                                onChange={this.handleUserChange}\n                              />\n                            </label>\n                            <label>\n                              <span>Country</span>\n                              <input\n                                type=\"text\"\n                                id=\"addressCountry\"\n                                name=\"addressCountry\"\n                                placeholder=\"addressCountry\"\n                                required\n                                defaultValue={me.addressCountry}\n                                onChange={this.handleUserChange}\n                              />\n                            </label>\n                            <label>\n                              <span>Postal Code (Zip)</span>\n                              <input\n                                type=\"text\"\n                                id=\"addressPostalCode\"\n                                name=\"addressPostalCode\"\n                                placeholder=\"addressPostalCode\"\n                                required\n                                defaultValue={me.addressPostalCode}\n                                onChange={this.handleUserChange}\n                              />\n                            </label>\n                            <div id=\"card-element\">\n                            </div>\n\n                            <div id=\"card-errors\" role=\"alert\"></div>\n                          </div>\n                        </StripedElement>\n                      <button type=\"submit\">Sav{loading ? 'ing' : 'e'} Changes</button>\n                    </fieldset>\n                  </Form>\n                )}\n              </Mutation>\n            { me && (\n              <>\n\n              </>\n            )}\n            { !me && (\n              <>\n                <h2>Sorry this is not your account please move along </h2>\n              </>\n            )}\n          </>\n        )}\n\n      </User>\n      </>\n    );\n  }\n}\n\nexport default UpdateBankInfo;\n"],"mappings":"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","sourceRoot":""}