{"version":3,"file":"static/webpack/static/development/pages/request.js.01bce4d147d4e74c3dc3.hot-update.js","sources":["webpack:///./components/RequestArtist.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Query, Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport DateStyles from './styles/DateStyles';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\nimport moment from \"moment\";\nimport styled from 'styled-components';\nimport Router from 'next/router';\nimport { SINGLE_ITEM_QUERY } from './UpdateItem';\nimport DatePicker from \"react-datepicker\";\n\nconst CREATE_REQUEST_MUTATION = gql`\n  mutation CREATE_REQUEST_MUTATION(\n    $requestedId: String\n    $dateOne: String!\n    $timeOne: String!\n    $dateTwo: String\n    $timeTwo: String\n    $dateThree: String\n    $timeThree: String\n    $details: String\n    $referenceImage: String\n    $approved: String\n  ) {\n    createRequest(\n      requestedId: $requestedId,\n      dateOne: $dateOne\n      timeOne: $timeOne\n      dateTwo: $dateTwo\n      timeTwo: $timeTwo\n      dateThree: $dateThree\n      timeThree: $timeThree\n      details: $details\n      referenceImage: $referenceImage\n      approved: $approved\n    ){\n      id\n    }\n  }\n`;\n\nconst REQUESTING_USER_QUERY = gql`\n  query GETTING_REQUESTED($id: ID!) {\n    gettingRequested(where: { id: $id }) {\n      id\n      email\n      name\n      lastName\n      instagramHandle\n      shop\n      price\n      profileImage\n      blackOut\n      blackOutRanges {\n        id\n        weekday\n        begin\n        end\n      }\n    }\n  }\n`;\n\nconst TimeDate = styled.div`\n  display: inline-block;\n  border-bottom: 1px solid grey;\n  margin-bottom: 25px;\n  width: 100%;\n  input {\n    display: inline-block;\n  }\n  label {\n    display: inherit;\n    width: 300px;\n    margin-bottom: 25px;\n  }\n`;\n\nclass RequestArtist extends Component {\n  state = {\n    requestedId: this.props.id,\n    referenceImage: '',\n    approved: 'no',\n    imageDone: true,\n  };\n\n  currentDate = new Date();\n\n\n  gatherDates = (singleDays, extendedDays) => {\n    var blockDays = singleDays;\n    var tempArray = new Array();\n    var finalArray = new Array();\n    var twoYears = new Date();\n    var closestDay = new Date();\n    var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    var index = 0;\n    for(var i=0; i < extendedDays.length; i++) {\n      if(extendedDays[i].weekday != \"\") {\n        var dayofweek = extendedDays[i].weekday;\n        for(var j=0; j < days.length; j++) {\n          if(days[j] == dayofweek) {\n            index = j;\n          }\n        }\n        closestDay.setDate(closestDay.getDate() + (index + 7 - closestDay.getDay()) % 7);\n        twoYears = moment(closestDay).add(365, 'days');\n        while(closestDay <= twoYears) {\n          tempArray.push(moment(closestDay).format('YYYY-MM-DD'));\n          closestDay = moment(closestDay).add(7, 'days');\n        }\n      } else if(extendedDays[i].begin != \"\" && extendedDays[i].end != \"\" ) {\n        var beginDate = moment(extendedDays[i].begin);\n        var endDate = moment(extendedDays[i].end);\n        while (beginDate <= endDate) {\n            tempArray.push(moment(beginDate).format('YYYY-MM-DD'));\n            beginDate = moment(beginDate).add(1, 'days');\n        }\n      } else {\n\n      }\n    }\n    finalArray = blockDays.concat(tempArray);\n    return finalArray;\n  }\n\n  convertDate = (date) => {\n    const complex = moment.utc(date).toDate()\n    const almostDate = moment(complex).add(1, 'd').toDate();\n    var newDate = new Date(almostDate),\n        month = (\"0\" + (newDate.getMonth()+1)).slice(-2),\n        day  = (\"0\" + newDate.getDate()).slice(-2);\n    return [ newDate.getFullYear(), month, day ].join(\"-\");\n\n  }\n\n  convertDateSubmit = (date) => {\n    const complex = moment.utc(date).toDate()\n    var newDate = new Date(complex),\n        month = (\"0\" + (newDate.getMonth()+1)).slice(-2),\n        day  = (\"0\" + newDate.getDate()).slice(-2);\n    return [ newDate.getFullYear(), month, day ].join(\"-\");\n\n  }\n\n  convertTimeSubmit = (date) => {\n    var complex = date.toTimeString().split(' ')[0];\n    return complex;\n  }\n\n  handleInfoChange = e => {\n    const { name, type, value } = e.target;\n    const val = type === 'number' ? (parseFloat(value) * 100) : value;\n    this.setState({ [name]: val });\n  };\n\n  handleChangeDateOne = e => {\n    // var complex = this.convertDateSubmit(e);\n    this.setState({dateOne: e})\n  };\n\n  handleChangeTimeOne = e => {\n    // var complex = e.toTimeString().split(' ')[0];\n    this.setState({timeOne: e})\n  }\n\n  handleChangeDateTwo = e => {\n    // var complex = this.convertDateSubmit(e);\n    this.setState({dateTwo: e})\n  };\n\n  handleChangeTimeTwo = e => {\n    // var complex = e.toTimeString().split(' ')[0];\n    this.setState({timeTwo: e})\n  }\n\n  handleChangeDateThree = e => {\n    // var complex = this.convertDateSubmit(e);\n    this.setState({dateThree: e})\n  };\n\n  handleChangeTimeThree = e => {\n    // var complex = e.toTimeString().split(' ')[0];\n    this.setState({timeThree: e})\n  }\n\n  createRequest = async (e, createRequestMutation) => {\n    e.preventDefault();\n    const complexOne = await this.convertDateSubmit(this.state.dateOne);\n    const complexTwo = await this.convertDateSubmit(this.state.dateTwo);\n    const complexThree = await this.convertDateSubmit(this.state.dateThree);\n    const complexFour = await this.convertTimeSubmit(this.state.timeOne);\n    const complexFive = await this.convertTimeSubmit(this.state.timeTwo);\n    const complexSix = await this.convertTimeSubmit(this.state.timeThree);\n    if(this.state.imageDone == true){\n      const res = await createRequestMutation({\n        variables: {\n          ...this.state,\n          dateOne: complexOne,\n          dateTwo: complexTwo,\n          dateThree: complexThree,\n          timeOne: complexFour,\n          timeTwo: complexFive,\n          timeThree: complexSix,\n        },\n      });\n    } else {\n      alert(\"Image has not uploaded yet. Please try resubmitting.\")\n      this.setState({\n        imageDone: false,\n      });\n    }\n  };\n\n\n  uploadFile = async e => {\n    this.setState({\n      imageDone: false,\n    });\n    console.log('uploading file ..... ');\n    const files = e.target.files;\n    const data = new FormData();\n    data.append('file', files[0]);\n    data.append('upload_preset', 'sickfits');\n\n    const res = await fetch('https://api.cloudinary.com/v1_1/a1995/image/upload', {\n      method: 'POST',\n      body: data\n    });\n    const file = await res.json();\n    if(file) {\n      this.setState({\n        referenceImage: file.secure_url,\n        imageDone: true,\n      });\n    }\n  }\n\n\n  render() {\n\n    return(\n      <Query query={ REQUESTING_USER_QUERY } variables={{id: this.props.id}}>\n          { ({ data, error, loading }) => {\n            if ( loading ) return <p> ... loading </p>;\n            if ( error ) return <Error error={error} />;\n            const user = data.gettingRequested;\n            console.log(this.props.id);\n            return (\n              <Mutation\n                mutation={CREATE_REQUEST_MUTATION}\n                variables={this.state}\n              >\n                {(createRequest, { loading, error }) => (\n                  <Form onSubmit={ async e => {\n                      e.preventDefault;\n                      await this.createRequest(e, createRequest);\n                      Router.push({\n                        pathname: '/ur-request',\n                      });\n                    }}\n                  >\n                    <Error error={error} />\n                    <DateStyles>\n                    <fieldset disabled={loading} aria-busy={loading}>\n                        <h2>Requesting { user.name }</h2>\n                        <h2>{ formatMoney(user.price) } to book</h2>\n                      <p>First Available</p>\n                      <TimeDate>\n                        <label htmlFor=\"dateOne\">\n                          Date: &nbsp;\n                          <DatePicker\n                            type=\"date\"\n                            id=\"dateOne\"\n                            name=\"dateOne\"\n                            placeholder=\"dateOne\"\n                            onChange={this.handleChangeDateOne}\n                            minDate={this.currentDate}\n                            excludeDates={this.gatherDates(user.blackOut, user.blackOutRanges.map(blackOutItem => blackOutItem ))}\n                            selected={this.state.dateOne}\n                          />\n                        </label>\n                        <label htmlFor=\"timeOne\">\n                          Time: &nbsp;\n                          <DatePicker\n                            type=\"time\"\n                            id=\"timeOne\"\n                            name=\"timeOne\"\n                            showTimeSelect\n                            showTimeSelectOnly\n                            timeIntervals={15}\n                            dateFormat=\"h:mm aa\"\n                            timeCaption=\"Time\"\n                            onChange={this.handleChangeTimeOne}\n                            selected={this.state.timeOne}\n                          />\n                        </label>\n                      </TimeDate>\n                      <p>Second Available</p>\n                      <TimeDate>\n                        <label htmlFor=\"dateTwo\">\n                          Date: &nbsp;\n                          <DatePicker\n                            type=\"date\"\n                            id=\"dateTwo\"\n                            name=\"dateTwo\"\n                            placeholder=\"dateTwo\"\n                            onChange={this.handleChangeDateTwo}\n                            minDate={this.currentDate}\n                            excludeDates={this.gatherDates(user.blackOut, user.blackOutRanges.map(blackOutItem => blackOutItem ))}\n                            selected={this.state.dateTwo}\n                          />\n                        </label>\n\n                        <label htmlFor=\"timeTwo\">\n                          Time: &nbsp;\n                          <DatePicker\n                            type=\"time\"\n                            id=\"timeTwo\"\n                            name=\"timeTwo\"\n                            placeholder=\"timeTwo\"\n                            showTimeSelect\n                            showTimeSelectOnly\n                            timeIntervals={15}\n                            dateFormat=\"h:mm aa\"\n                            timeCaption=\"Time\"\n                            onChange={this.handleChangeTimeTwo}\n                            selected={this.state.timeTwo}\n                          />\n                        </label>\n                      </TimeDate>\n                      <p>Third Available</p>\n                      <TimeDate>\n                        <label htmlFor=\"dateThree\">\n                          Date: &nbsp;\n                          <DatePicker\n                            type=\"date\"\n                            id=\"dateThree\"\n                            name=\"dateThree\"\n                            style= {{ width: 200 }}\n                            placeholder=\"dateThree\"\n                            onChange={this.handleChangeDateThree}\n                            minDate={this.currentDate}\n                            excludeDates={this.gatherDates(user.blackOut, user.blackOutRanges.map(blackOutItem => blackOutItem ))}\n                            selected={this.state.dateThree}\n                          />\n                        </label>\n                        <label htmlFor=\"timeThree\">\n                          Time: &nbsp;\n                          <DatePicker\n                            type=\"time\"\n                            id=\"timeThree\"\n                            name=\"timeThree\"\n                            style= {{ width: 200 }}\n                            showTimeSelect\n                            showTimeSelectOnly\n                            timeIntervals={15}\n                            dateFormat=\"h:mm aa\"\n                            timeCaption=\"Time\"\n                            onChange={this.handleChangeTimeThree}\n                            selected={this.state.timeThree}\n                          />\n                        </label>\n                      </TimeDate>\n\n                      <label htmlFor=\"details\">\n                        Details\n                        <textarea\n                          type=\"text\"\n                          id=\"details\"\n                          name=\"details\"\n                          placeholder=\"Details, be specific!\"\n                          required\n                          defaultValue={ this.state.details }\n                          onChange={this.handleInfoChange}\n                        />\n                      </label>\n\n                      <label htmlFor=\"referenceImage\">\n                        Reference Image\n                        <input type=\"file\" id=\"referenceImage\" name=\"referenceImage\" placeholder=\"Upload an image\" onChange={ this.uploadFile }/>\n                        { this.state.image && <img src={ this.state.image } alt=\"upload preview\" /> }\n                      </label>\n\n                      <button type=\"submit\">Submi{loading ? 'ing' : 't'} Appointment Request</button>\n                    </fieldset>\n                    </DateStyles>\n                  </Form>\n                )}\n              </Mutation>\n            )\n          } }\n        </Query>\n    );\n  }\n}\n\nexport default RequestArtist;\nexport { CREATE_REQUEST_MUTATION };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AA8BA;AAsBA;AAAA;AAAA;AAAA;AACA;AAcA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AACA;AADA;AAIA;AAJA;AAAA;AACA;AADA;AAKA;AALA;AAAA;AACA;AADA;AAMA;AANA;AAAA;AACA;AADA;AAOA;AACA;AARA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAUA;AAEA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AACA;AAVA;AASA;AATA;AAAA;AACA;AADA;AAqBA;AACA;AAAA;AACA;AADA;AACA;AAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA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","sourceRoot":""}