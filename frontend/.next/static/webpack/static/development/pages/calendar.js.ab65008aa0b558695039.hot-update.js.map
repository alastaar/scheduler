{"version":3,"file":"static/webpack/static/development/pages/calendar.js.ab65008aa0b558695039.hot-update.js","sources":["webpack:///./components/CalendarList.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport gql from 'graphql-tag';\nimport events from '../lib/events';\nimport { perPage } from '../config';\nimport BigCalendar from \"react-big-calendar\";\nimport moment from \"moment\";\nimport CalendarStyles from './styles/CalendarStyles';\nimport debounce from 'lodash.debounce';\nimport { Query } from 'react-apollo';\nimport User from './User';\n\nmoment.locale(\"en\");\nconst localizer = BigCalendar.momentLocalizer(moment);\n\nconst allViews = Object.keys(BigCalendar.Views).map(k => BigCalendar.Views[k]);\n\nconst ALL_REQUESTS_CALENDAR_QUERY = gql`\n  query ALL_REQUESTS_CALENDAR_QUERY {\n    requests(orderBy: createdAt_DESC) {\n      id\n      name\n      email\n      details\n      dateOne\n      timeOne\n      approved\n      user{\n        name\n        lastName\n        email\n      }\n    }\n  }\n`;\n\n//\n// class CalendarList extends Component {\n//   state = {\n//     view: \"day\",\n//     date: new Date(),\n//     width: 500,\n//     cal_events: [],\n//   };\n//\n//   convertDate = (date) => {\n//     return moment(date);\n//   }\n//\n//   convertTime = (time24) => {\n//     var tmpArr = time24.split(':'), time12;\n//     if(+tmpArr[0] == 12) {\n//       time12 = tmpArr[0] + ':' + tmpArr[1] + ' pm';\n//     }\n//     else {\n//       if(+tmpArr[0] == 0) {\n//         time12 = '12:' + tmpArr[1] + ' am';\n//       }\n//       else {\n//         if(+tmpArr[0] > 12) {\n//           time12 = (+tmpArr[0]-12) + ':' + tmpArr[1] + ' pm';\n//         }\n//         else {\n//           time12 = (+tmpArr[0]) + ':' + tmpArr[1] + ' am';\n//         }\n//       }\n//     }\n//     return time12;\n//   }\n//\n//\n//   render() {\n//     return (\n//       <User>\n//         {({ data: { me } }) => (\n//         <CalendarStyles>\n//         <div className=\"key\">\n//           <div className=\"red\"></div><span>Pending</span>\n//           <div className=\"black\"></div><span>Approved</span>\n//           <div className=\"gold\"></div><span>Confirmed</span>\n//         </div>\n//         <Query query={ALL_REQUESTS_CALENDAR_QUERY}>\n//           {({ data, loading, error }) => (\n//             <div style={{ height: 500 }}>\n//               <BigCalendar\n//                 localizer={localizer}\n//                 events={data.requests.filter(request => request.email === me.email).map((request, index) => ({\n//                   title: this.convertTime(request.timeOne) + ' ' + request.user.name + ' ' + request.user.email,\n//                   start: this.convertDate(request.dateOne),\n//                   end: request.dateOne,\n//                 }))}\n//                 components={{\n//                   event: CalendarComponent,\n//                 }}\n//               />\n//             </div>\n//           )}\n//         </Query>\n//         </CalendarStyles>\n//       )}\n//     </User>\n//     );\n//   }\n// }\n\n\nconst CalendarList = props => (\n      <User>\n        {({ data: { me } }) => (\n        <CalendarStyles>\n        <div className=\"key\">\n          <div className=\"red\"></div><span>Pending</span>\n          <div className=\"black\"></div><span>Approved</span>\n          <div className=\"gold\"></div><span>Confirmed</span>\n        </div>\n        <Query query={ALL_REQUESTS_CALENDAR_QUERY}>\n          {({ data, loading, error }) => (\n            <div style={{ height: 500 }}>\n              <BigCalendar\n                localizer={localizer}\n                events={data.requests.filter(request => request.email === me.email).map((request, index) => ({\n                  title: request.timeOne + ' ' + request.user.name + ' ' + request.user.email,\n                  start: this.convertDate(request.dateOne),\n                  end: request.dateOne,\n                }))}\n                components={{\n                  event: CalendarComponent,\n                }}\n              />\n            </div>\n          )}\n        </Query>\n        </CalendarStyles>\n      )}\n    </User>\n);\n\nclass CalendarComponent extends React.Component {\n    state = {\n      view: \"day\",\n      date: new Date(),\n      width: 500,\n      cal_events: [],\n    };\n\n    convertDate = (date) => {\n      return moment.utc(date).toDate()\n    }\n\n    convertTime = (time24) => {\n      var tmpArr = time24.split(':'), time12;\n      if(+tmpArr[0] == 12) {\n        time12 = tmpArr[0] + ':' + tmpArr[1] + ' pm';\n      }\n      else {\n        if(+tmpArr[0] == 0) {\n          time12 = '12:' + tmpArr[1] + ' am';\n        }\n        else {\n          if(+tmpArr[0] > 12) {\n            time12 = (+tmpArr[0]-12) + ':' + tmpArr[1] + ' pm';\n          }\n          else {\n            time12 = (+tmpArr[0]) + ':' + tmpArr[1] + ' am';\n          }\n        }\n      }\n      return time12;\n    }\n  render() {\n    const request = this.props.request;\n    return (\n          <>\n            {request.email === me.email && (\n                <Link href={{pathname: '/request-item', query: { id: request.id },}}>\n                  <a>\n                    <CalendarComponentStyles style={{background: request.approved === \"no\" ? \"red\" : request.approved === \"yes\" ? \"black\" : \"gold\"}}>\n                      <div>\n                        { this.convertTime(request.timeOne) } with { request.name }\n                      </div>\n                    </CalendarComponentStyles>\n                  </a>\n                </Link>\n\n              )}\n          </>\n    );\n  }\n}\n\n\nexport default CalendarList;\nexport { ALL_REQUESTS_CALENDAR_QUERY };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAEA;AAolDA;AACA;AAqDA;;;;;A","sourceRoot":""}