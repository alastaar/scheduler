{"version":3,"file":"static/webpack/static/development/pages/accupdate.js.8404431ba2001df4fcbb.hot-update.js","sources":["webpack:///./components/StripeAccountUpdate.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Link from 'next/link';\nimport User from './User';\nimport { Query, Mutation } from 'react-apollo';\nimport Error from './ErrorMessage';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport Table from './styles/Table';\nimport SickButton from './styles/SickButton';\nimport PropTypes from 'prop-types';\nimport { CURRENT_USER_QUERY } from './User';\nimport Router from 'next/router';\nimport { prodStripe, devStripe } from '../config';\n\n\nconst ACCOUNT_UPDATE_MUTATION = gql`\n  mutation updateStripeAccount($name: String, $lastName: String, $country: String, $type: String, $addressCity: String, $addressLineOne: String, $addressPostalCode: String, $addressState: String, $dobDay: String, $dobMonth: String, $dobYear: String, $ssnLastFour: String, $userId: ID!, $stripeToken: String!) {\n    updateStripeAccount(name: $name, lastName: $lastName, country : $country, type : $type, addressCity : $addressCity,  addressLineOne : $addressLineOne, addressPostalCode : $addressPostalCode, addressState : $addressState, dobDay : $dobDay, dobMonth : $dobMonth, dobYear : $dobYear, ssnLastFour : $ssnLastFour, userId : $userId, stripeToken: $stripeToken) {\n      id\n      name\n      lastName\n      country\n      type\n      addressCity\n      addressLineOne\n      addressPostalCode\n      addressState\n      dobDay\n      dobMonth\n      dobYear\n      accId\n      ssnLastFour\n    }\n  }\n`;\n\nclass StripeAccountUpdate extends Component {\n\n  state = {\n\n  };\n\n  handleUserChange = e => {\n    const { name, type, value } = e.target;\n    const val = type === 'number' ? parseFloat(value) : value;\n    this.setState({ [name]: val });\n    this.setState({ name: nameVal.value, lastName: lastName.value, type: 'individual' });\n  };\n\n  updateStripeAccount = async (e, updateStripeAccountMutation) => {\n    e.preventDefault();\n    const res = await updateStripeAccountMutation({\n      variables: {\n        ...this.state,\n      },\n    });\n  };\n\n\n\n  handleForm = async e => {\n    e.preventDefault();\n    const token = process.env.NODE_ENV === 'development' ? devStripe : prodStripe;\n    const stripe = Stripe(token);\n    const myForm = document.querySelector('.my-form')\n\n    const res = await stripe.createToken('account', {\n      legal_entity: {\n        first_name: document.querySelector('#nameVal').value,\n        last_name: document.querySelector('#lastName').value,\n        ssn_last_4: document.querySelector('#ssnLastFour').value,\n        type: 'individual',\n        dob: {\n          day: document.querySelector('#dobDay').value,\n          month: document.querySelector('#dobMonth').value,\n          year: document.querySelector('#dobYear').value,\n        },\n        address: {\n          line1: document.querySelector('#addressLineOne').value,\n          city: document.querySelector('#addressCity').value,\n          state: document.querySelector('#addressState').value,\n          postal_code: document.querySelector('#addressPostalCode').value,\n        },\n      },\n      tos_shown_and_accepted: true,\n    }).catch(err => {\n      alert(err.message);\n    });\n\n    if (res.token) {\n      this.setState({ stripeToken: res.token.id });\n    }\n  };\n\n  render() {\n    return (\n      <>\n      <User>\n        {({ data: { me } }) => (\n          <>\n            <h2>Account Details</h2>\n              <Mutation\n                mutation={ ACCOUNT_UPDATE_MUTATION }\n                variables={{\n                  ...this.state,\n                  userId: this.props.id,\n                }}\n              >\n                {(updateStripeAccount, { loading, error }) => (\n                  <Form className=\"accountUpdate\" onSubmit={ async e => {\n                    await this.handleForm(e);\n                    await this.updateStripeAccount(e, updateStripeAccount);\n                    Router.push({\n                      pathname: '/me',\n                    });\n                  }}>\n                    <Error error={error} />\n                    <fieldset disabled={loading} aria-busy={loading}>\n                      <input type=\"hidden\" name=\"token\" id=\"token\"/>\n                      <label htmlFor=\"nameVal\">\n                        First Name\n                        <input\n                          type=\"text\"\n                          id=\"nameVal\"\n                          name=\"nameVal\"\n                          placeholder=\"nameVal\"\n                          required\n                          defaultValue={me.name}\n                          onChange={this.handleUserChange}\n                        />\n                      </label>\n                      <label htmlFor=\"lastName\">\n                        Last Name\n                        <input\n                          type=\"text\"\n                          id=\"lastName\"\n                          name=\"lastName\"\n                          placeholder=\"lastName\"\n                          required\n                          defaultValue={me.lastName}\n                          onChange={this.handleUserChange}\n                        />\n                      </label>\n                      <label>\n                        <span>Date of Birth Day &nbsp;</span>\n                        <input\n                          type=\"number\"\n                          data-number-to-fixed=\"2\"\n                          data-number-stepfactor=\"100\"\n                          id=\"dobDay\"\n                          name=\"dobDay\"\n                          placeholder=\"\"\n                          required\n                          defaultValue={me.dobDay}\n                          onChange={this.handleUserChange}\n                          style={{width: \"80px\"}}\n                        />\n                      </label>\n                      <label>\n                        <span>Date of Birth Month &nbsp;</span>\n                        <input\n                          type=\"number\"\n                          data-number-to-fixed=\"2\"\n                          data-number-stepfactor=\"100\"\n                          name=\"dobMonth\"\n                          placeholder=\"\"\n                          required\n                          defaultValue={me.dobMonth}\n                          onChange={this.handleUserChange}\n                          style={{width: \"80px\"}}\n                        />\n                      </label>\n                      <label>\n                        <span>Date of Birth Year &nbsp;</span>\n                        <input\n                          type=\"number\"\n                          data-number-to-fixed=\"2\"\n                          data-number-stepfactor=\"100\"\n                          id=\"dobYear\"\n                          name=\"dobYear\"\n                          placeholder=\"\"\n                          required\n                          defaultValue={me.dobYear}\n                          onChange={this.handleUserChange}\n                          style={{width: \"160px\"}}\n                        />\n                      </label>\n                      <label>\n                        <span>Social Security (last 4 digits) &nbsp;</span>\n                        <input\n                          type=\"number\"\n                          data-number-to-fixed=\"2\"\n                          data-number-stepfactor=\"100\"\n                          size={4}\n                          maxLength={4}\n                          id=\"ssnLastFour\"\n                          name=\"ssnLastFour\"\n                          placeholder=\"\"\n                          required\n                          defaultValue={me.ssnLastFour}\n                          onChange={this.handleUserChange}\n                          style={{width: \"160px\"}}\n                        />\n                      </label>\n\n                      <label>\n                        <span>Street Address Line 1</span>\n                        <input\n                          type=\"text\"\n                          id=\"addressLineOne\"\n                          name=\"addressLineOne\"\n                          placeholder=\"\"\n                          required\n                          defaultValue={me.addressLineOne}\n                          onChange={this.handleUserChange}\n                        />\n                      </label>\n                      <label>\n                        <span>City</span>\n                        <input\n                          type=\"text\"\n                          id=\"addressCity\"\n                          name=\"addressCity\"\n                          placeholder=\"\"\n                          required\n                          defaultValue={me.addressCity}\n                          onChange={this.handleUserChange}\n                        />\n                      </label>\n                      <label>\n                        <span>State</span>\n                        <input\n                          type=\"text\"\n                          id=\"addressState\"\n                          name=\"addressState\"\n                          placeholder=\"\"\n                          required\n                          defaultValue={me.addressState}\n                          onChange={this.handleUserChange}\n                        />\n                      </label>\n                      <label>\n                        <span>Postal Code (Zip)</span>\n                        <input\n                          type=\"text\"\n                          id=\"addressPostalCode\"\n                          name=\"addressPostalCode\"\n                          placeholder=\"\"\n                          required\n                          defaultValue={me.addressPostalCode}\n                          onChange={this.handleUserChange}\n                        />\n                      </label>\n                      <p>By clicking Save, you agree to <a href=\"our-terms\">our terms</a> and the <a href=\"https://stripe.com/us/connect-account/legal\">Stripe Connected Account Agreement</a>.</p>\n                      <button type=\"submit\">Sav{loading ? 'ing' : 'e'} Changes</button>\n                    </fieldset>\n                  </Form>\n                )}\n              </Mutation>\n            { me && (\n              <>\n\n              </>\n            )}\n            { !me && (\n              <>\n                <h2>Sorry this is not your account please move along </h2>\n              </>\n            )}\n          </>\n        )}\n\n      </User>\n      </>\n    );\n  }\n}\n\nexport default StripeAccountUpdate;\n"],"mappings":"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","sourceRoot":""}