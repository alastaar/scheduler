{"version":3,"file":"static/webpack/static/development/pages/request.js.6582cfbccf635548f15a.hot-update.js","sources":["webpack:///./components/RequestArtist.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Query, Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\nimport moment from \"moment\";\nimport styled from 'styled-components';\nimport { SINGLE_ITEM_QUERY } from './UpdateItem';\n\nconst CREATE_REQUEST_MUTATION = gql`\n  mutation CREATE_REQUEST_MUTATION(\n    $requestedId: String\n    $name: String\n    $lastName: String\n    $email: String\n    $price: Int\n    $dateOne: String!\n    $timeOne: String!\n    $dateTwo: String\n    $timeTwo: String\n    $dateThree: String\n    $timeThree: String\n    $details: String\n    $referenceImage: String\n    $approved: String\n  ) {\n    createRequest(\n      requestedId: $requestedId,\n      name: $name\n      lastName: $lastName\n      email: $email\n      price: $price\n      dateOne: $dateOne\n      timeOne: $timeOne\n      dateTwo: $dateTwo\n      timeTwo: $timeTwo\n      dateThree: $dateThree\n      timeThree: $timeThree\n      details: $details\n      referenceImage: $referenceImage\n      approved: $approved\n    ){\n      id\n    }\n  }\n`;\n\nconst TimeDate = styled.div`\n  display: inline-block;\n  border-bottom: 1px solid grey;\n  margin-bottom: 25px;\n  width: 100%;\n  input {\n    display: inline-block;\n  }\n  label {\n    display: inherit;\n    width: 300px;\n    margin-bottom: 25px;\n  }\n`;\n\nclass RequestArtist extends Component {\n  state = {\n    requestedId: this.props.id,\n    name: this.props.name,\n    lastName: this.props.lastName,\n    email: this.props.email,\n    price: this.props.price,\n    dateOne: '',\n    timeOne: '',\n    dateTwo: '',\n    timeTwo: '',\n    dateThree: '',\n    timeThree: '',\n    referenceImage: '',\n    approved: '',\n  };\n\n  handleChange = e => {\n    const { name, type, value } = e.target;\n    const val = type === 'number' ? parseFloat(value) : value;\n    this.setState({ [name]: val });\n    this.setState({ approved: 'no' });\n    console.log(this.props);\n  };\n\n  uploadFile = async e => {\n    console.log('uploading file ..... ');\n    const files = e.target.files;\n    const data = new FormData();\n    data.append('file', files[0]);\n    data.append('upload_preset', 'sickfits');\n\n    const res = await fetch('https://api.cloudinary.com/v1_1/a1995/image/upload', {\n      method: 'POST',\n      body: data\n    });\n    const file = await res.json();\n    console.log(file);\n    this.setState({\n      referenceImage: file.secure_url,\n    });\n  }\n\n  render() {\n    return(\n            <Mutation mutation={CREATE_REQUEST_MUTATION} variables={this.state}>\n              {(createRequest, { loading, error }) => (\n                <Form onSubmit={ async e => {\n                    e.preventDefault;\n                    const res = await createRequest();\n                    console.log(res);\n                  }}\n                >\n                  <Error error={error} />\n                  <fieldset disabled={loading} aria-busy={loading}>\n                      <h2>Requesting { this.props.name } { this.props.lastName }</h2>\n                      <h2>{ this.props.shop }</h2>\n                      <h2>{ formatMoney(this.props.price) }</h2>\n                    <p>First Available</p>\n                    <TimeDate>\n                      <label htmlFor=\"dateOne\">\n                        Date: &nbsp;\n                        <input\n                          type=\"date\"\n                          id=\"dateOne\"\n                          name=\"dateOne\"\n                          placeholder=\"dateOne\"\n                          style= {{ width: 200 }}\n                          required\n                          defaultValue={ this.state.dateOne }\n                          onChange={this.handleChange}\n                        />\n                      </label>\n\n                      <label htmlFor=\"timeOne\">\n                        Time: &nbsp;\n                        <input\n                          type=\"time\"\n                          id=\"timeOne\"\n                          name=\"timeOne\"\n                          placeholder=\"timeOne\"\n                          style= {{ width: 200 }}\n                          required\n                          defaultValue={ this.state.timeOne }\n                          onChange={this.handleChange}\n                        />\n                      </label>\n                    </TimeDate>\n                    <p>Second Available</p>\n                    <TimeDate>\n                      <label htmlFor=\"dateOne\">\n                        Date: &nbsp;\n                        <input\n                          type=\"date\"\n                          id=\"dateOne\"\n                          name=\"dateOne\"\n                          placeholder=\"dateOne\"\n                          style= {{ width: 200 }}\n                          required\n                          defaultValue={ this.state.dateOne }\n                          onChange={this.handleChange}\n                        />\n                      </label>\n\n                      <label htmlFor=\"timeOne\">\n                        Time: &nbsp;\n                        <input\n                          type=\"time\"\n                          id=\"timeOne\"\n                          name=\"timeOne\"\n                          placeholder=\"timeOne\"\n                          style= {{ width: 200 }}\n                          required\n                          defaultValue={ this.state.timeOne }\n                          onChange={this.handleChange}\n                        />\n                      </label>\n                    </TimeDate>\n                    <p>Third Available</p>\n                    <TimeDate>\n                      <label htmlFor=\"dateOne\">\n                        Date: &nbsp;\n                        <input\n                          type=\"date\"\n                          id=\"dateOne\"\n                          name=\"dateOne\"\n                          style= {{ width: 200 }}\n                          placeholder=\"dateOne\"\n                          required\n                          defaultValue={ this.state.dateOne }\n                          onChange={this.handleChange}\n                        />\n                      </label>\n                      <label htmlFor=\"timeOne\">\n                        Time: &nbsp;\n                        <input\n                          type=\"time\"\n                          id=\"timeOne\"\n                          name=\"timeOne\"\n                          style= {{ width: 200 }}\n                          placeholder=\"timeOne\"\n                          required\n                          defaultValue={ this.state.timeOne }\n                          onChange={this.handleChange}\n                        />\n                      </label>\n                    </TimeDate>\n\n                    <label htmlFor=\"details\">\n                      Details\n                      <textarea\n                        type=\"text\"\n                        id=\"details\"\n                        name=\"details\"\n                        placeholder=\"Details, be specific!\"\n                        required\n                        defaultValue={ this.state.details }\n                        onChange={this.handleChange}\n                      />\n                    </label>\n\n                    <label htmlFor=\"referenceImage\">\n                      Reference Image\n                      <input type=\"file\" id=\"referenceImage\" name=\"referenceImage\" placeholder=\"Upload an image\" onChange={ this.uploadFile }/>\n                      { this.state.image && <img src={ this.state.image } alt=\"upload preview\" /> }\n                    </label>\n\n                    <button type=\"submit\">Submi{loading ? 'ing' : 't'} Appointment Request</button>\n                  </fieldset>\n                </Form>\n              )}\n            </Mutation>\n    );\n  }\n}\n\nexport default RequestArtist;\nexport { CREATE_REQUEST_MUTATION };\n"],"mappings":"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","sourceRoot":""}