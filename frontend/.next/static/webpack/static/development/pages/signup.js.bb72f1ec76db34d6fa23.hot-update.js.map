{"version":3,"file":"static/webpack/static/development/pages/signup.js.bb72f1ec76db34d6fa23.hot-update.js","sources":["webpack:///./components/Signup.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport { CURRENT_USER_QUERY } from './User';\nimport Router from 'next/router';\n\nconst SIGNUP_MUTATION = gql`\n  mutation SIGNUP_MUTATION($email: String!, $name: String!, $lastName: String!, $password: String!, $artist: String, $permissions: [Permission]) {\n    signup(email: $email, name: $name, lastName: $lastName, password: $password, artist: $artist, permissions: $permissions) {\n      id\n      email\n      name\n      lastName\n      artist\n      permissions\n    }\n  }\n`;\n\nclass Signup extends Component {\n  state = {\n    name: '',\n    lastName: '',\n    email: '',\n    password: '',\n    artist: '',\n    permissions: [],\n  };\n  saveToState = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  render() {\n    return (\n      <Mutation\n        mutation={SIGNUP_MUTATION}\n        variables={this.state}\n        refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n      >\n        {(signup, { error, loading }) => (\n          <Form\n            method=\"post\"\n            onSubmit={async e => {\n              e.preventDefault();\n              await signup();\n              if(this.state.approved == \"yes\") {\n                Router.push({\n                  pathname: '/me',\n                });\n              } else {\n                Router.push({\n                  pathname: '/',\n                });\n              }\n              this.setState({ name: '', lastName: '', email: '', password: '', artist: '' });\n            }}\n          >\n            <fieldset disabled={loading} aria-busy={loading}>\n              <h2>Sign Up for An Account</h2>\n              <Error error={error} />\n              <label htmlFor=\"email\">\n                Email\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"email\"\n                  value={this.state.email}\n                  onChange={this.saveToState}\n                />\n              </label>\n              <label htmlFor=\"name\">\n                First Name\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"name\"\n                  value={this.state.name}\n                  onChange={this.saveToState}\n                />\n              </label>\n              <label htmlFor=\"lastName\">\n                Last Name\n                <input\n                  type=\"text\"\n                  name=\"lastName\"\n                  placeholder=\"lastName\"\n                  value={this.state.lastName}\n                  onChange={this.saveToState}\n                />\n              </label>\n              <label htmlFor=\"password\">\n                Password\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"password\"\n                  value={this.state.password}\n                  onChange={this.saveToState}\n                />\n              </label>\n              <p>By joining, you agree to Palazar’s <a href=\"/terms\">Terms of Services</a> as well as to receive occasional emails from us.</p>\n              <label htmlFor=\"artist\">\n                <button type=\"submit\" name=\"artist\" value=\"yes\" onClick={this.saveToState}>Seller Sign Up!</button>\n              </label>\n              <label htmlFor=\"artist\">\n                <button type=\"submit\" name=\"artist\" value=\"no\" onClick={this.saveToState}>Customer Sign Up!</button>\n              </label>\n            </fieldset>\n          </Form>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default Signup;\nexport { SIGNUP_MUTATION };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAYA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAOA;AACA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAilEA;AAyEA;;;;AA5FA;AACA;AA8FA;;;;;A","sourceRoot":""}