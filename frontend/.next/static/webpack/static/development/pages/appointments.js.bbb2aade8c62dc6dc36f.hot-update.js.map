{"version":3,"file":"static/webpack/static/development/pages/appointments.js.bbb2aade8c62dc6dc36f.hot-update.js","sources":["webpack:///./components/ApproveRequest.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport { ALL_REQUESTS_QUERY } from './RequestList';\n\nconst APPROVE_REQUEST_MUTATION = gql`\n  mutation APPROVE_REQUEST_MUTATION(\n    $id: ID!\n    $dateOne: String!\n    $timeOne: String!\n    $approved: String\n  ) {\n    approveRequests(\n      id: $id\n      dateOne: $dateOne\n      timeOne: $timeOne\n      approved: $approved\n    ) {\n      id\n      approved\n      dateOne\n      timeOne\n    }\n  }\n`;\n\nconst StayInline = styled.div`\n  button {\n    display: block;\n    margin: 0 auto;\n    border: none;\n  }\n`;\n\n\nclass ApproveRequest extends Component {\n  state = {\n    approved: 'yes',\n  };\n\n  update = e => {\n    this.setState({ approved: 'yes' });\n    console.log(this.props);\n  };\n\n  handleChange = e => {\n    const { name, type, value, id } = e.target;\n    if(id == 'one'){\n      this.setState({ dateOne: this.props.dateOne, timeOne: this.props.timeOne });\n    }\n    else if ( id === 'two' ) {\n      this.setState({ dateOne: this.props.dateTwo, timeOne: this.props.timeTwo });\n    }\n    else {\n      this.setState({ dateOne: this.props.dateThree, timeOne: this.props.timeThree });\n    }\n    console.log(this.state);\n  };\n\n  convertTime = (time24) => {\n    var tmpArr = time24.split(':'), time12;\n    if(+tmpArr[0] == 12) {\n      time12 = tmpArr[0] + ':' + tmpArr[1] + ' pm';\n    }\n    else {\n      if(+tmpArr[0] == 0) {\n        time12 = '12:' + tmpArr[1] + ' am';\n      }\n      else {\n        if(+tmpArr[0] > 12) {\n          time12 = (+tmpArr[0]-12) + ':' + tmpArr[1] + ' pm';\n        }\n        else {\n          time12 = (+tmpArr[0]) + ':' + tmpArr[1] + ' am';\n        }\n      }\n    }\n    return time12;\n  }\n\n  render() {\n    return (\n        <Mutation\n          mutation={ APPROVE_REQUEST_MUTATION }\n          variables={{ id: this.props.id, dateOne: this.state.dateOne, timeOne: this.state.timeOne, approved: this.state.approved }}\n          update={this.update}\n          refetchQueries={[{ query: ALL_REQUESTS_QUERY }]}\n        >\n          {(approveRequest, { error }) => (\n          <StayInline>\n            <label htmlFor=\"buttonOne\">\n              <input type=\"radio\" name=\"datetime\" value=\"dateOne\" id=\"one\" onChange={this.handleChange}/><label htmlFor=\"one\"> { this.props.dateOne } { this.props.timeOne }</label><br></br>\n              <input type=\"radio\" name=\"datetime\" value=\"dateTwo\" id=\"two\" onChange={this.handleChange}/><label htmlFor=\"two\"> { this.props.dateTwo } { this.props.timeTwo }</label><br></br>\n              <input type=\"radio\" name=\"datetime\" value=\"dateThree\" id=\"three\" onChange={this.handleChange}/><label htmlFor=\"three\"> { this.props.dateThree } { this.props.timeThree }</label>\n            </label>\n            <button onClick={async e => {\n                  e.preventDefault;\n                  const res = await approveRequest();\n                  console.log(res);\n                }\n              }\n            >\n              {this.props.children}\n            </button>\n          </StayInline>\n          )}\n        </Mutation>\n    );\n  }\n}\n\nexport default ApproveRequest;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAqBA;AAAA;AAAA;AAAA;AACA;AAQA;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAoBA;;;;AAzEA;AACA;AA2EA;;;;A","sourceRoot":""}