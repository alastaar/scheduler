{"version":3,"file":"static/webpack/static/development/pages/index.js.e185db46fb79834f9176.hot-update.js","sources":["webpack:///./components/Items.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Item from './Item';\nimport { perPage } from '../config';\nimport { ALL_USERS_QUERY } from './Permissions';\nimport UserBlock from './UserBlock';\nimport Search from './Search';\nimport { prodStripe, devStripe } from '../config';\n\n\n\nconst ItemsList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 60px;\n  max-width = ${ props => props.theme.maxWidth }\n  margin: 0 auto;\n  @media ( max-width: 720px) {\n    display: block;\n  }\n`;\n\nconst Center = styled.div`\n  text-align: center;\n`;\n\nconst SearchField = styled.div`\n  display: grid;\n  grid-template-columns: 1fr auto;\n  border: 1px solid ${props => props.theme.lightgrey};\n  margin-bottom: 50px;\n`;\n\nclass Items extends Component {\n  render() {\n    const token = process.env.NODE_ENV === 'development' ? devStripe : prodStripe;\n    console.log(this.token);\n    return (\n      <Center>\n        <SearchField>\n          <Search />\n        </SearchField>\n        <Query query={ ALL_USERS_QUERY } variables={{\n          skip: this.props.page * perPage - perPage,\n        }}>\n          { ({ data, error, loading }) => {\n            if ( loading ) return <p> ... loading </p>;\n            if ( error ) return <p> ERROR: { error.message }</p>;\n            return <ItemsList>\n              { data.users.filter(user => user.artist == 'yes' && user.stripeToken != null).map(user => <UserBlock user={user} key={ user.id }/>) }\n            </ItemsList>;\n          } }\n        </Query>\n      </Center>\n    )\n  }\n}\n\nexport default Items;\nexport { ALL_ITEMS_QUERY };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AAOA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAGA;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAIA;;;;AAtBA;AACA;AAwBA;;;;;A","sourceRoot":""}