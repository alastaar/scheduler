{"version":3,"file":"static/webpack/static/development/pages/bank.js.0a3e9f06b793007a063b.hot-update.js","sources":["webpack:///./components/CreateBankInfo.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Link from 'next/link';\nimport User from './User';\nimport { Query, Mutation } from 'react-apollo';\nimport Error from './ErrorMessage';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport Table from './styles/Table';\nimport SickButton from './styles/SickButton';\nimport PropTypes from 'prop-types';\nimport { CURRENT_USER_QUERY } from './User';\nimport Router from 'next/router';\nimport StripeCheckout from 'react-stripe-checkout';\n\nconst BANK_CREATE_MUTATION = gql`\n  mutation createBankInfo($bankToken: String!) {\n    createBankInfo(bankToken: $bankToken) {\n      id\n      accId\n    }\n  }\n`;\n\nclass CreateBankInfo extends Component {\n\n  state = {\n    currency: 'usd',\n  };\n\n  handleUserChange = e => {\n    const { name, type, value } = e.target;\n    const val = type === 'number' ? parseFloat(value) : value;\n    this.setState({ [name]: val });\n    this.setState({ name: nameVal.value, lastName: lastName.value, type: 'individual' });\n  };\n\n  createBankInfo = async (e, createStripeAccountMutation) => {\n    e.preventDefault();\n    console.log(this.state);\n    const res = await createStripeAccountMutation({\n      variables: {\n        ...this.state,\n      },\n    });\n    console.log(\"going to the backend\");\n  };\n\n\n  render() {\n    return (\n      <>\n      <User>\n        {({ data: { me } }) => (\n          <>\n            <h2>Bank Details</h2>\n              <Mutation\n                mutation={ BANK_CREATE_MUTATION }\n                variables={{\n                  ...this.state,\n                  userId: this.props.id,\n                }}\n              >\n                {(createBankInfo, { loading, error }) => (\n                  <Form className=\"accountCreate\" onSubmit={ async e => {\n                    console.log(this.state);\n                    await this.createBankInfo(e, createBankInfo);\n                  }}>\n                    <Error error={error} />\n                    <fieldset disabled={loading} aria-busy={loading}>\n                      <StripeCheckout\n                        name=\"Scratcher\"\n                        description=\"Put card info in to recieve payouts\"\n                        panelLabel=\"Create Card\"\n                        stripeKey=\"pk_test_K3j8JU1o7WrtlpA5zY8bavrR\"\n                        currency=\"USD\"\n                        email={me.email}\n                        token={ res => this.setState({ bankToken: res.id }) }\n                      >\n                        Card Info\n                      </StripeCheckout>\n                      <button type=\"submit\">Sav{loading ? 'ing' : 'e'} Changes</button>\n                    </fieldset>\n                  </Form>\n                )}\n              </Mutation>\n            { me && (\n              <>\n\n              </>\n            )}\n            { !me && (\n              <>\n                <h2>Sorry this is not your account please move along </h2>\n              </>\n            )}\n          </>\n        )}\n\n      </User>\n      </>\n    );\n  }\n}\n\nexport default CreateBankInfo;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAQA;;;;;;;;;;;;;;;;;;AAEA;AACA;AADA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAIA;AADA;AACA;AAJA;AAGA;AAKA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAWA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAFA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBA;AA8BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAxCA;AAiDA;;;;AA9EA;AACA;AAgFA;;;;A","sourceRoot":""}